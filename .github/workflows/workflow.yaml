name: CI
on: 
  push:
    branches:
      - main
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  go_build:
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref != 'refs/tags/flux' && github.ref != 'refs/heads/deploy' && github.ref != 'refs/tags/**' }}
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    env:
      GOPATH: ${{ github.workspace }}/GOHOME
      GO11MODULE: off
      CGO_ENABLED: 0
      GOOS: linux
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ${{ github.workspace }}/GOHOME/src/github.com/${{ github.repository }}
    - run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      id: slug
    - name: Setup Env
      uses: actions/setup-go@v2
      with:
        path: ${{ github.workspace }}/GOHOME
        go-version: ${{ matrix.go-version }}
    - name: GO Get 
      run: |
        go get github.com/rakyll/statik 
    - name: GO Test
      run: |
        cd ${{ github.workspace }}/GOHOME/src/github.com/${{ github.repository }}/hola/
        go test -v
    - name: GO BUILD
      run: |
        cd ${{ github.workspace }}/GOHOME/src/github.com/${{ github.repository }}/hola/
        go build -ldflags="-w -s" -a -installsuffix cgo
    - name: Sent Noti
      if: ${{ always() }}
      uses: dtherhtun/google-chat-action@v0.8
      with:
        project: ${{ github.repository }}
        commit: ${{ steps.slug.outputs.sha8 }}
        branch: ${{ github.ref }}
        status: ${{ job.status }}
        actionid: ${{ github.repository }}/actions/runs/${{ github.run_id }}
        webhook: "https://chat.googleapis.com/v1/spaces/AAAAYTX-Vqs/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=Iwtvo1dwg36dZgUyrUCREQGGMrO71PkIoQGafOf17Yg%3D&threadKey=git-commit"

  docker_bp:
    needs: [go_build]
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/GOHOME
    steps: 
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ${{ github.workspace }}/GOHOME/src/github.com/${{ github.repository }}
    - name: Build & push
      run: |
        cd ${{ github.workspace }}/GOHOME/src/github.com/${{ github.repository }}/hola/
        echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        docker build -t ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }} .
        docker push ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
